<UserControl x:Class="Conway_Nativity_Directory.NativityInformation"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Conway_Nativity_Directory"
             xmlns:system="clr-namespace:System.Windows"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Style>
        <Style TargetType="UserControl">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>
    </UserControl.Style>
    <UserControl.Resources>
        <ContextMenu x:Key="imageContextMenu">
            <MenuItem Name="embeddMenuItem" Header="Embedd"
                      Click="Embedd_Click"/>
            <MenuItem Name="relinkMenuItem" Header="Relink"
                      Click="Relink_Click"/>
            <MenuItem Header="Rotation">
                <MenuItem Name="rotateRightMenuItem" Header="Rotate Right"
                          Click="RotateRight_Click"/>
                <MenuItem Name="rotateLeftMenuItem" Header="Rotate Left"
                          Click="RotateLeft_Click"/>
            </MenuItem>
            <MenuItem Name="refreshMenuItem" Header="Refresh" Click="refreshMenuItem_Click"/>
            <Separator/>
            <MenuItem Name="showInFileExplorer" Header="Show In File Explorer" Click="showInFileExplorer_Click"/>
            <MenuItem Name="openWithMenuItem" Header="Open With" MouseEnter="openWithMenuItem_MouseEnter">
                <MenuItem Name="openWithBrowseMenuItem" Header="Browse..." Click="openWithBrowseMenuItem_Click"/>
            </MenuItem>
        </ContextMenu>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Margin="10,10,10,5" Orientation="Horizontal">
            <TextBlock Text="Id: "/>
            <TextBlock Name="idTextBlock"/>
            <TextBlock Text="Title: " Margin="10,0,0,0"/>
            <TextBlock Name="titleTextBlock"/>
        </StackPanel>
        <Border Name="imageBorder" Grid.Row="1" Margin="10,5" Background="Transparent">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Border>
                    <RichTextBox BorderThickness="0" Background="{x:Null}" Focusable="False" VerticalAlignment="Center">
                        <FlowDocument>
                            <Paragraph TextAlignment="Center">
                                <Image Source="{x:Static system:SystemIcons.Exclamation}" Width="30" Margin="0,0,10,0" VerticalAlignment="Center"/>
                                <Run BaselineAlignment="Center">
                                    The image file could not be found. Click 'Find' to find the image file or to choose a different image.
                                </Run>
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=DisplayingImageNotFound,
                                            RelativeSource={RelativeSource AncestorType={x:Type local:NativityInformation}}}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Border BorderThickness="1" BorderBrush="Gray" PreviewMouseDown="imageBorder_PreviewMouseDown">
                    <Image Name="image" ContextMenu="{DynamicResource imageContextMenu}" ContextMenuOpening="ContextMenu_ContextMenuOpening"/>
                </Border>
                <Button Name="chooseImageButton" Grid.Row="1" Height="24"
                        Click="ChooseImageButton_Click">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content" Value="Choose"/>
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=DisplayingImageNotFound,
                                            RelativeSource={RelativeSource AncestorType={x:Type local:NativityInformation}}}" Value="True">
                                    <Setter Property="Content" Value="Find"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=ShowingImage,
                                            RelativeSource={RelativeSource AncestorType={x:Type local:NativityInformation}}}" Value="False"/>
                                        <Condition Binding="{Binding Path=IsMouseOver, ElementName=imageBorder}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Name="clearImageButton" Grid.Row="1" Height="24" Content="Clear"
                        Click="ClearImageButton_Click">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=ShowingImage,
                                            RelativeSource={RelativeSource AncestorType={x:Type local:NativityInformation}}}" Value="True"/>
                                        <Condition Binding="{Binding Path=DisplayingImageNotFound,
                                            RelativeSource={RelativeSource AncestorType={x:Type local:NativityInformation}}}" Value="False"/>
                                        <Condition Binding="{Binding Path=IsMouseOver, ElementName=imageBorder}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Border>
        <Border Name="descriptionBorder" Grid.Row="2" Margin="10,5,10,10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <local:CustomRichTextBox x:Name="descriptionRichTextBox" IsReadOnly="True"
                                         AcceptsReturn="True" AcceptsTab="True"
                                     Width="{Binding Path=ActualWidth, ElementName=descriptionBorder}">
                    <FlowDocument PageWidth="{Binding Path=ActualWidth, ElementName=descriptionRichTextBox, Mode=OneWay}"/>
                    <local:CustomRichTextBox.Style>
                        <Style TargetType="{x:Type local:CustomRichTextBox}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=EditingDescription,
                                    RelativeSource={RelativeSource AncestorType={x:Type local:NativityInformation}}}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </local:CustomRichTextBox.Style>
                </local:CustomRichTextBox>
                <TextBox Name="descriptionTextBox" TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True"
                         Text="{Binding Path=Description, RelativeSource={RelativeSource AncestorType={x:Type local:NativityInformation}}}">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=EditingDescription,
                                    RelativeSource={RelativeSource AncestorType={x:Type local:NativityInformation}}}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Border>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=EditingDescription,
                                    RelativeSource={RelativeSource AncestorType={x:Type local:NativityInformation}}}" Value="True">
                                    <Setter Property="BorderBrush" Value="#ffffa000"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Button Name="editDescriptionButton" Grid.Row="1" Height="24" Content="Edit"
                        Click="EditDescriptionButton_Click">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=EditingDescription,
                                            RelativeSource={RelativeSource AncestorType={x:Type local:NativityInformation}}}" Value="False"/>
                                        <Condition Binding="{Binding Path=IsMouseOver, ElementName=descriptionBorder}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Name="saveDescriptionButton" Grid.Row="1" Height="24" Content="Save"
                        Click="SaveDescriptionButton_Click">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=EditingDescription,
                                    RelativeSource={RelativeSource AncestorType={x:Type local:NativityInformation}}}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Border>
    </Grid>
</UserControl>
